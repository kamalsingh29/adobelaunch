import {clpp} from "./cl.core.esm.js";let g={};var _ = clpp._;var f=function(window){var HC=function(){this.a=this.g=null;this.b=this.f=!1;this.c=new _.Xe},IC=function(){};_.w(HC,_.tn);_.r=HC.prototype;_.r.onPlayerCreated=function(a){this.g=a;this.a=a.getSurface().D()};_.r.onContentWillLoad=function(){this.a&&(this.c.on(this.a,"webkitplaybacktargetavailabilitychanged",this.ei.bind(this)),this.c.on(this.a,"webkitcurrentplaybacktargetiswirelesschanged",this.Di.bind(this)))};_.r.onPlayerWillRelease=function(){this.c.release()};_.r.id=function(){return"airplay"};
_.r.ei=function(a){switch(a.availability){case "available":this.b=!0;break;case "not-available":this.b=!1}this.g.trigger(new _.I(_.yb,{canCast:this.b}))};_.r.Di=function(){this.f=this.a.webkitCurrentPlaybackTargetIsWireless;this.g.trigger(new _.I(this.f?_.xb:_.wb))};_.r.Da=function(){return this.f};_.r.sd=function(){return this.b};_.r.Qi=function(){this.b&&this.a.webkitShowPlaybackTargetPicker()};_.B("clpp.airplay.AirPlayPlugin",HC);HC.prototype.showCastMenu=HC.prototype.Qi;HC.prototype.canCast=HC.prototype.sd;
HC.prototype.isCasting=HC.prototype.Da;HC.Id="airplay";IC.prototype.create=function(){return new HC};_.hl(new IC);};f.call(g, window);